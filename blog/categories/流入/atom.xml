<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 流入 | 调和的微光-HARMONIC GLEAM]]></title>
  <link href="http://hmgle.github.com/blog/categories/流入/atom.xml" rel="self"/>
  <link href="http://hmgle.github.com/"/>
  <updated>2013-02-21T22:39:43+08:00</updated>
  <id>http://hmgle.github.com/</id>
  <author>
    <name><![CDATA[hmgle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一次考研]]></title>
    <link href="http://hmgle.github.com/blog/2011/01/17/e4b880e6aca1e88083e7a094/"/>
    <updated>2011-01-17T22:43:00+08:00</updated>
    <id>http://hmgle.github.com/blog/2011/01/17/e4b880e6aca1e88083e7a094</id>
    <content type="html"><![CDATA[<p>昨天考完后，就像玩完了一个游戏，回味无穷。花一百六的入场费参与这场游戏真的很值，无论是抱着玩的态度还是以被玩的态度参加。我把它当成一场战斗，对于渴望战斗的人来说这是难得的一次体验，我喜欢硝烟的气氛，只恨它火药味还是太淡了点，时间太短了，转眼我现在又沦入了平淡无奇的生活。<br/>
这是第二次考。去年没参加是个意外。这次早早来到考场静候。开考时人到了16个，本来是30个考生的。“真傻呀，如此有意义的活动竟然错过！”我暗地替14位缺考的考生惋惜半天。政治题目对我挺有挑战性，这正是它的魅力所在了，要没挑战性的活动我还来这鼓捣干嘛？今年的分析题很有趣呀，例如有道题问你怎样理解“温暖别人就是幸福自己”的。我的答案仅供参考：显然题目中温暖是个动词。先论证人的温暖别人这种的社会活动具有传递性、对称性和自反性。传递性：如果A温暖B，B温暖C，那么A温暖C是成立的。对称性：如果B接收到来至A的温暖，那么当A感到冷时B肯定会温暖A的，这叫知恩图报嘛，否则不合伦理之道。即A温暖B等价B温暖A。自反性：自己是温暖自己的，应该是生物的基本属性之一吧，就像植物吸收养分养活自己一样。温暖具有自反性。学过离散数学的都知道，具有这三性的就是一个等价关系。温暖是个等价关系，所以温暖关系定义了一个等价类，这个等价类集合的元素是社会上的人。接下来我们大概要阐述一下等价类的性质了，当然书上是找不到的，是我自己创造出来的一个性质：等价类里面的任意元素作用其他元素，会引起自身同样的效果。那么我们就可以理直气壮的说：温暖他人就是温暖自己。然后再加个条件：如果接受到温暖蕴含着感受到幸福的话，那么温暖他人就是幸福自己成立。哈哈，阅卷老师是不甘心入吾彀中的。老师告诫过我们：人生价值在于贡献，你得从这个角度回答。<br/>
下午考英语，我盘算着除了作文之外供我发挥的方面太少了，就不去了。我躺在床上想着明年报什么专业。一年只能报一个专业太少了，我恨不得把所有喜欢的都报了。我是个务虚不务实的人，除了工科之外的我都很喜欢，这当然是受G·H·哈代那本《一个数学家的辩白》的毒害了，到现在我也坚信越优美的东西越没有实用性，庸俗实用的工科当然不在我的考虑范围之内了。后来迷迷糊糊就睡了一个下午了。<br/>
第二天考专业课，上午数学分析，下午高等代数。广州大学的，由于之前我搜索过整个互联网也没有得到过这个学校的这两门试题，这次能一睹真容实在太激动了。数分果然很给力，比高数之类的深邃多了。我感激地先把所有题目抄下，等考完就带出去，然后再战战兢兢地答题。不过下午的高代就有点失望了，竟然还有填空题，明显浅了很多，于是就只抄了部分回去。有需要的尽管问我好了，不过是我自己手抄的，懒得输入电脑了，而且我又不会用Lex之类的排版。<br/>
明年还考，想学哲学之类的，数理逻辑就很吸引我，当然不是讨厌的马毛邓之类的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[入手Kindle 3]]></title>
    <link href="http://hmgle.github.com/blog/2011/01/13/e585a5e6898bkindle-3/"/>
    <updated>2011-01-13T22:05:00+08:00</updated>
    <id>http://hmgle.github.com/blog/2011/01/13/e585a5e6898bkindle-3</id>
    <content type="html"><![CDATA[<p>淘宝买来Kindle 3。这玩意儿太合我胃口了，干净简洁利落。<br/>
这两天一直下适合6英寸屏的电子书，已经下了百来本，加上之前电脑上的，按正常速度看的话，要几十年才能看完。当然按趋势来看，下载书的速度远远超过看书的速度，再过一阵下载回来的书我几辈子也看不完。我看书也就图个当时痛快，能记住的不多。<br/>
发现有些txt格式和mobi格式的书每隔一定距离就添加换行，这在kindle上看起来就是画蛇添足。本来到屏幕边缘就自动换行了，现在多了许多难看的无意义的换行符，很影响阅读的。对于那些段落之间有空格分隔的文本还是有救的，解决方法：用<a href="http://man.chinaunix.net/newsoft/vi/doc/pattern.html">vim</a>的替换，输入:%s/\n\S\@=//g就搞定了。别的编辑器没试，<a href="http://hi.baidu.com/hmgle/blog/item/2f03bd8beef6b0c1fc1f1097.html">上次</a>也发现很多以前以为很牛逼的编辑器例如UE、Notepad++、emeditor等对正则表达式的查找和替换支持都不是很好，因此要用到正则表达式的时候我无视其它，直接用vim。vim是最牛逼的。对于所有段落都连在一起的一坨的文本是没救的。<br/>
对于mobi格式，我还不知道用什么软件编辑它，txt转换mobi容易，mobi怎么转换成txt？</p>

<p> </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[跳过灵格斯词霸强制升级]]></title>
    <link href="http://hmgle.github.com/blog/2011/01/03/e8b7b3e8bf87e781b5e6a0bce696afe8af8de99cb8e5bcbae588b6e58d87e7baa7/"/>
    <updated>2011-01-03T21:12:00+08:00</updated>
    <id>http://hmgle.github.com/blog/2011/01/03/e8b7b3e8bf87e781b5e6a0bce696afe8af8de99cb8e5bcbae588b6e58d87e7baa7</id>
    <content type="html"><![CDATA[<p>by:hmgle</p>

<p>灵格斯词霸是我用的比较频繁的一个软件。虽说词典软件还有星际译王，而且星际译王还是开源的，但它在Windows平台下运行有点慢，不知道是不是GTK的缘故，那个gedit在Windows下也是奇慢无比。</p>

<p>2011年刚来，灵格斯给我们带来了新年礼物，就是那个讨厌的强制旧版本升级啦。不升级就自动退出。这样对灵格斯的某些用户来说是很扫兴的。<br/>
当然，对灵格斯进行逆向分析，修改它的代码，是可以达到不升级继续使用的目的的，这活儿<a href="http://bbs.pediy.com/">看雪</a>的人在行。但这样做是违反<a href="http://www.lingoes.cn/zh/translator/license.htm">『灵格斯翻译家』最终用户许可协议</a>的（协议里面有一条：禁止反向工程、反向编译和反向汇编等等），而且别人写的补丁自己用起来的话心里也不踏实啊。那我们还是合法地在自己系统上做文章吧。灵格斯启动的时候应该是会先取得系统日期，然后和某个时间进行比较，超过这个时间的话它就强制升级（这只是我的猜测，绝对没有反向工程）。那我们就先把我们自己的系统日期改成一个较早的日子吧，早到灵格斯都还没出生的日子，等灵格斯启动之后再把系统日期改回来。可以用批处理这样做：</p>

<pre><code>@echo off
set oldyear=2004
set oldmonth=01
set oldday=01
rem 上面是要改成的时间，早到能启动就行了
set fileflag=0
if exist getcurrentdate.nul (set fileflag=1
copy getcurrentdate.nul /Y getcurrentdate.backup)
date /t &gt; getcurrentdate.nul
for /F “tokens=1,2,3 delims=- ” %%i in (getcurrentdate.nul) do (set currentyear=%%i
set currentmonth=%%j
set currentday=%%k)
date %oldyear%-%oldmonth%-%oldday%
if NOT errorlevel 0  (echo 设置时间时出错
pause
exit)
date /t
start “” /D”D:\Program Files\lingoes_portable_2.6.3_zh” Lingoes.exe
rem  上面一行是运行灵格斯，D:\Program Files\lingoes_portable_2.6.3_zh是我电脑上的灵格斯安装目录路径，根据你自己的情况更改
if NOT errorlevel 0 (echo 启动时出错
pause
gote end)
ping 127.1 -n 7 &gt;nul
rem 上面是为了延时，因为灵格斯启动时取得系统日期是要一定时间的，一般ping个三四次就够了，如果嫌慢自己改小点吧
:end
del getcurrentdate.nul
if %fileflag% EQU 1 rename getcurrentdate.backup getcurrentdate.nul
date %currentyear%-%currentmonth%-%currentday%
exit
</code></pre>

<p> </p>

<p>明白的话下面部分就没必要看了，就是：<br/>
1.先看你的灵格斯是放在哪个目录，把这个目录路径记下，比如我的就是D:\Program Files\lingoes_portable_2.6.3_zh；<br/>
2.新建一个文本文件，用文本编辑器打开，把上面批处理的内容复制进去，把start "" /D"D:\Program Files\lingoes_portable_2.6.3_zh" Lingoes.exe那一行（就是红色字体那一行）里面的目录路径（蓝色背景那部分）改成步骤1记下的目录路径，保存后把文件名改成bat结尾的形式，例如：lgs.bat;<br/>
3.双击这个批处理文件就直接运行灵格斯词霸了。</p>

<p>你可以把lgs.bat放在任意位置，也可以为它创建桌面快捷方式（这样可以改图标和用快捷键运行）。对常用的软件，我喜欢建个目录，然后为这个目录设置环境变量，在这个目录下创建启动常用软件的批处理，例如把上面那个lgs.bat放进来，这样用快捷键win+r后输入lgs就运行了。当然每个人操作习惯是不同的。</p>

<p>这个批处理是有个bug的，就是如果你刚好在系统更换日期前的瞬间运行的话，例如在23点59分59秒运行这个批处理，运行后你的系统日期会后退一天。不过你应该也像我一样，不可能在那个时刻做这样的事情的。</p>

<p>update:开机后第一次运行ping 127.1四五次是不够的，因为灵格斯会加载很多数据到内存。非第一次运行的话ping个三四次就够了，现在我把它改成7次。改了个错字（原来的@echo off写成@echo 0ff）。</p>

<p>附：<a href="http://www.lingoes.cn/zh/translator/license.htm">『灵格斯翻译家』最终用户许可协议</a>（见http://www.lingoes.cn/zh/translator/license.htm）<br/>
『灵格斯翻译家』最终用户许可协议<br/>
Lingoes Translator End-User License Agreenent<br/>
在使用本软件的同时，你已经默认接受了此协议。<br/>
请仔细阅读以下使用许可，如果您不同意以下任何一点，请立即停止使用此软件。</p>

<p>Kevin Yau 将本软件程序的最终使用许可权授予您，但您必须向 Kevin Yau 作以下保证：</p>

<p>本《最终用户许可协议》(以下称《协议》)是您(个人或机构团体)与上述软件(以下称“软件”或“软件产品”)版权所有人 Kevin Yau 之间的法律协议。 在您使用本软件产品之前,请务必阅读此《协议》，任何与《协议》有关的软件、电子文档等都应是按本协议的条款而授予您的，同时本《协议》亦适用于任何有关本软件产品的后期发行和升级。 您一旦安装、复制、下载、访问或以其它方式使用本软件产品，即表示您同意接受本《协议》各项条款的约束。 如您不同意本《协议》的条款，那么，版权所有人 Kevin Yau 则不予将本软件产品的使用权授予您。 在这种情况下，您不得使用、复制或传播本软件产品。</p>

<p>本《协议》中，将软件使用用途分为“个人非商业用途”和“商业用途”：个人用途指个人在非团体机构中使用本软件并用于非商业目的；商业用途指个人用于任何商业目的或团体机构出于任何目的使用本软件。本《协议》中对于个人非商业用途和商业用途将采用不同的授权范围和使用方式。</p>

<p>本软件产品受著作权法及国际著作权条约和其它知识产权法及条约的保护。<br/>
1. 许可证的授予. 本《协议》授予您下列权利<br/>
安装和使用: <br/>
对于个人非商业用途，即仅供个人用户用于非商业环境及非盈利活动，您可安装无限制数量的本软件产品来使用。 对于商业用途，你必须预先获得版权人授权许可后才能安装和使用本软件产品。</p>

<p>复制、分发和传播: <br/>
您可以复制、分发和传播无限制数量的软件产品, 但您必须保证每一份复制、分发和传播都必须是完整和真实的, 包括所有有关本软件产品的软件、电子文档, 版权和商标宣言, 亦包括本协议.</p>

<p>本软件可以独立分发亦可随同其他软件一起分发, 但如因此而引起任何问题, 版权人将不予承担任何责任.</p>

<ol>
<li>其它权利和限制说明<br/>
禁止反向工程、反向编译和反向汇编：<br/>
您不得对本软件产品进行反向工程、反向编译和反向汇编，同时不得改动编译在程序文件内部的任何资源。 除非适用法律明文允许上述活动，否则您必须遵守此协议限制。</li>
</ol>


<p>组件的分隔：<br/>
本软件产品是被当成一个单一产品而被授予许可使用，不得将各个部分分开用于任何目的行动。</p>

<p>软件产品转让：<br/>
您可以在不保留任何副本的情况下，将本“软件产品”(包括所有组成部分、媒体内容和印刷材料、任何更新版本、本《协议》等)全部转让，并且受让人接受本《协议》的各项条件下，您可永久转让您在本《协议》下的所有权利。 如果本“软件产品”为更新版本，转让时必须包括本“软件产品”所有前版本。</p>

<p>终止：<br/>
如您未遵守本《协议》的各项条件，在不损害其它权利的情况下，版权人可将本《协议》终止。 如发生此种情况，则您必须销毁“软件产品”及其各部分的所有副本。</p>

<p>商标：<br/>
本《协议》不授予您由版权人 Kevin Yau 所拥有的任何商标或服务商标有关的任何权利。</p>

<p>使用方式：<br/>
对于个人非商业用途，本软件产品准许个人用户免费使用。凡用于商业用途，均须得到版权人授权许可。</p>

<p>本软件产品不能用于销售或随同旨在获益的软件产品或产品包一起分发，但本软件可包含在任何免费或非赢利性的软件产品或产品包里. 同时您必须保证所分发的软件包含全部文件, 并且未作任何修改。</p>

<p>个别授权: <br/>
如有任何组织或个人利用本软件以任何方式为公众服务并同时满足其自身特定目的而分发、复制和传播本软件产品, 均须得到版权人授权同意后方可进行, 否则视为侵权.</p>

<ol>
<li>版权<br/>
本软件产品（包括但不限于本软件产品中所含的任何图象、照片、动画、文字和附加程序，不包含本软件可访问的词典及其内容）、随附的印刷材料、及本软件产品的任何副本的一切所有权和知识产权，均由版权人 Kevin Yau 拥有。</li>
</ol>


<p>通过使用本“软件产品”可访问的词典及其内容的一切所有权和知识产权，均属于各自内容的所有者拥有，并可能受适用著作权或其它知识产权法律和条约的保护，本《协议》不授予您使用这些内容的权利。如果您需要使用，应当另外取得词典及其内容所有者的同意和授权。</p>

<ol>
<li>有限保证<br/>
无保证：<br/>
本软件版权人 Kevin Yau 特此申明对本软件产品之使用不提供任何保证。 版权人将不对任何用户保证本软件产品的适用性，不保证无故障产生；亦不对任何用户使用此软件所遭遇到的任何理论上的或实际上的损失承担负责。</li>
</ol>


<p>对造成损失无责任：<br/>
本软件版权人对本软件产品可能或已知问题造成的意外，连续，直接或间接损失不承担任何责任(包括利益损失，商业中断，信息丢失或其他任何经济上的损失)。</p>

<ol>
<li>其它<br/>
本软件版权人 Kevin Yau 对本协议拥有最终解释权。</li>
</ol>


<p> 2006-2007 Kevin Yau 版权所有，保留所有权利。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[文本编辑器的正则表达式]]></title>
    <link href="http://hmgle.github.com/blog/2010/12/25/e69687e69cace7bc96e8be91e599a8e79a84e6ada3e58899e8a1a8e8bebee5bc8f/"/>
    <updated>2010-12-25T22:46:00+08:00</updated>
    <id>http://hmgle.github.com/blog/2010/12/25/e69687e69cace7bc96e8be91e599a8e79a84e6ada3e58899e8a1a8e8bebee5bc8f</id>
    <content type="html"><![CDATA[<p>我之前主要用gedit和Notepad++。现在发现在编辑器里搜索像(?&lt;!\d)\d{3}这样的模式，试了很多文本编辑器都有问题，例如emeditor,MadEdit,UltraEdi都是同样的问题：零宽度断言部分和后面部分同样类型的时候就不行了，而notepad++好像不支持零宽度断言。另外MadEdit v0.2.9.1版使用正则表达式搜索<sup>的话，计算次数时会直接死掉。VIM倒是可以做到，用/(\d)\@&lt;!\d{3}，但VIM不好上手。问在Windows下，除了Vim和Emacs外，还有别的文本编辑器（不用插件）可以匹配到这种模式吗？</sup></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手机号码更换]]></title>
    <link href="http://hmgle.github.com/blog/2010/09/07/e6898be69cbae58fb7e7a081e69bb4e68da2/"/>
    <updated>2010-09-07T18:41:00+08:00</updated>
    <id>http://hmgle.github.com/blog/2010/09/07/e6898be69cbae58fb7e7a081e69bb4e68da2</id>
    <content type="html"><![CDATA[<p>上个月我换了个手机号码。事情是这样的：换了台Palm手机，换SIM卡的时候需要输入Pin码（我自己设置的，对于一个对信息极度敏感的人设置Pin口令是正常的），前两次输错，在明知道我已经找不到PUK码的情况下我还是贸然地将宝贵的最后一次Pin码输错了。这事坏就坏在我知道我的Keepass里是保存有Pin码的，回去打开Keepass一看发现PIN码原来只有四位数，而我全都输了六位数，前面四位是对的！造成这个悲剧的根本原因是对自己记忆力的错误估计。号码是找不回了，教训还当记着。花代价所换来的一点才智，抵过别人传授的数倍不止（富兰克林语）。我将记得截止到2010年SIM卡的PIN码只能是四位的。悲痛之余换了现在的新号码。</p>

<p>我的大部分联系人的号码都存储在原来的SIM卡内，本人才疏学浅未能破解SIM卡密码体系，无法把你们一一挖出来。因此写了个程序让大伙找到我。假如你有我原来的手机号码，或者即使没有原来的号码但掌握了我一些个人信息，都可以通过该程序得到我的新的手机号码。</p>

<p>基于安全考虑，当然不能采用下面的方法来获得新的号码：</p>

<p>1.验证问题答案;</p>

<p>2.if (Answer is correct) then</p>

<p>output new_num</p>

<p>3.else then</p>

<p>output "you fail";</p>

<p>4.return.</p>

<p>因为上面的代码运行时其实计算机已经把新号码存储在内存了，计算机知道的任何秘密，我们有办法是她告诉我们。通过逆向分析，使用几个跳转指令就是号码显示出来了。大概也没有人愿意吧秘密藏在程序里吧。我们可以构造一个具有以下性质的函数f：</p>

<p>f(待验证的信息) = 新号码 当且仅当待验证的信息等于旧号码。</p>

<p>对于从验证信息途径获取新号码的原理就是密码学中的秘密共享协议。组合数学有道常见的题目，大概意思是有个强盗把宝藏藏在一个其他人都不知道的山洞里，只有通过藏宝图才能找到。这个强盗有7个继承人，为避免宝藏被独吞，他打算这样分配藏宝图给7个继承人：任意4人所持的藏宝图部分都能拼凑成一幅完整的藏宝图，不足4人在场的情况下没有办法拼出完整的藏宝图。问他应该怎样实现他的设想。密码学把这叫做(4,7)门限秘密共享方案。我的程序参考了Mignotte门限方案，只不过随意修改了权重：有的需要回答两个问题就能解出新号码，有的要回答三个。Mignotte方案的核心是中国剩余定理，程序里只需写个解同余式组的函数就可以了。</p>

<p>为了保持我的熵不过多流失，将信息隔离使它们单向通信是必须的。比如你通过正确回答问题A和问题B获得我的手机新号码，但你不能通过求出的新号码逆向得到其它问题的答案，也不能通过任何信息逆向获取我的原来的号码和其他任何你之前不知道的信息。这只要用单向函数就能实现了。因为你输入的任何信息都要散列成整数以便下一步运算，所以我只要选用一个单向的Hash函数就行了。简单的Hash函数有很多，比如elfhash、P.J.weinberger  Hash等，但大多数单向性不好，而MD5、SHA-1算法又过于复杂，用在这里显得大材小用了，最后选用了Blizzard在MPQ中的Hash算法，据说是One-way Hash，较简单，只是版权协议未知。我将其修改几个参数后挪来作为非商业目的使用，也不知有没有侵权，若侵权了我马上移除这个Hash部分并愿意赔偿甚至赔偿10块钱。为了减少被暴力破解出新号码的可能，我对Hash值再取某个较小的整数的模，相当于减少了Hash函数的值域，这样就造成了更多的碰撞，在大多数情况下碰撞是有害的。</p>

<p>这个程序上传在我的<a href="http://cid-a062cb69b403730a.office.live.com/self.aspx/.Documents/GetMyNum.zip">SkyDrive</a>(地址:http://cid-a062cb69b403730a.office.live.com/self.aspx/.Documents/GetMyNum.zip 或<a href="http://goo.gl/ulcB">http://goo.gl/ulcB</a>)上（Google文件共享网站疑被墙，故新注册了Windows live帐号），压缩包md5值：78EF060E16269272DACF1733882206ED     。包括交互式的C版本和用Delphi写的有界面的版本。那个用Delphi写的是很难看的。程序没有自定义功能，只适用于我自己的号码，不支持设置成求解别人号码和自定义问题的功能，有时间的人可以扩展这个功能。除了暴雪那个Hash函数外，其他部分copyleft。</p>

<p>如果你觉得这是个繁琐的过程或你确定是我的朋友但无法通过它找回我的号码，或有其它的疑问，可以发邮件到我的邮箱netsharec at gmail.com。</p>
]]></content>
  </entry>
  
</feed>
